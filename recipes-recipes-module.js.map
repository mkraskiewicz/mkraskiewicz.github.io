{"version":3,"sources":["webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.css","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-start/recipe-start.component.css","webpack:///./src/app/recipes/recipe-start/recipe-start.component.html","webpack:///./src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///./src/app/recipes/recipes-routing.module.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.module.ts"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img [src]=\\\"recipe.imagePath\\\" \\n    alt=\\\"{{ recipe.name }}\\\" \\n    class=\\\"img-responsive\\\"\\n    style=\\\"max-height: 300px\\\">\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{recipe.name}}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"btn-group\\\" appDropdown>\\n      <button type=\\\"button\\\"\\n      class=\\\"btn btn-primary dropdown-toggle \\\">\\n      Manage Recipe <span class=\\\"caret\\\"></span>\\n    </button>\\n    <ul class=\\\"dropdown-menu\\\">\\n      <li><a (click) = \\\"toTheShoppingList()\\\" style=\\\"cursor: pointer;\\\" >To shopping List</a></li>\\n      <li><a style=\\\"cursor: pointer;\\\" \\n        (click) = \\\"onEditRecipe()\\\"\\n        >Edit Recipe</a></li>\\n      <li><a style=\\\"cursor: pointer;\\\"\\n        (click) = \\\"onDeleteRecipe()\\\" >Delete Recipe</a></li>\\n    </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    {{ recipe.description }}\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <ul class=\\\"list-group\\\">\\n          <li *ngFor=\\\"let ingredient of recipe.ingredients\\\" \\n          class=\\\"list-group-item\\\">{{ ingredient.name }} - {{ ingredient.amount }}</li>\\n      </ul>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Recipe } from '../recipe.model';\r\nimport { RecipeService } from '../recipe.service';\r\nimport { ActivatedRoute, Params, Router } from '../../../../node_modules/@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-recipe-detail',\r\n  templateUrl: './recipe-detail.component.html',\r\n  styleUrls: ['./recipe-detail.component.css']\r\n})\r\nexport class RecipeDetailComponent implements OnInit {\r\n\r\n  recipe: Recipe; \r\n  id: number;\r\n\r\n  constructor(private recipeService: RecipeService, \r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n    \r\n    this.route.params\r\n      .subscribe(\r\n        (params: Params) => {\r\n          this.id = +params['id'];\r\n          this.recipe = this.recipeService.getRecipe(this.id);\r\n        }\r\n      );\r\n  }\r\n\r\n  toTheShoppingList(){\r\n    this.recipeService.addIngredientsToShoppingList(this.recipe.ingredients);\r\n    \r\n  }\r\n\r\n  onEditRecipe(){\r\n    this.router.navigate(['edit'], {relativeTo: this.route});\r\n  }\r\n\r\n  onDeleteRecipe(){\r\n    this.recipeService.deleteRecipe(this.id);\r\n    this.router.navigate(['/recipes']);\r\n    \r\n  }\r\n\r\n}\r\n","module.exports = \"input.ng-invalid.ng-touched,\\r\\ntextarea.ng-invalid.ng-touched {\\r\\n    border: 1px solid red;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form [formGroup] = \\\"recipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button class=\\\"btn btn-success\\\" \\n          [disabled]=\\\"!recipeForm.valid\\\"\\n          type=\\\"submit\\\">Save</button>\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onCancel()\\\" >Cancel</button>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input \\n            type=\\\"text\\\"\\n            id=\\\"name\\\"\\n            formControlName=\\\"name\\\"\\n            class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"imagePath\\\">Image URL</label>\\n              <input \\n              type=\\\"text\\\"\\n              id=\\\"imagePath\\\"\\n              formControlName=\\\"imagePath\\\"\\n              class=\\\"form-control\\\"\\n              #imagePath>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <img [src]=\\\"imagePath.value\\\" class=\\\"img-responsive\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"description\\\">Description</label>\\n                <textarea \\n                type=\\\"text\\\"\\n                id=\\\"description\\\"\\n                formControlName=\\\"description\\\"\\n                class=\\\"form-control\\\"\\n                rows=\\\"6\\\"></textarea>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-12\\\" formArrayName=\\\"ingredients\\\">\\n                <div class=\\\"row\\\" \\n                *ngFor=\\\"let ingredientCtrl of getControls(); let i = index\\\"\\n                [formGroupName]=\\\"i\\\"\\n                style=\\\"margin-top: 10px\\\">\\n                  <div class=\\\"col-xs-8\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      formControlName=\\\"name\\\">\\n                  </div>\\n                  <div class=\\\"col-xs-2\\\">\\n                    <input\\n                      type=\\\"number\\\"\\n                      class=\\\"form-control\\\"\\n                      formControlName=\\\"amount\\\">\\n                  </div>\\n                  <div class=\\\"col-xs-2\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"onDeleteIngredient(i)\\\">X</button>\\n                  </div>\\n                </div>\\n                <hr>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-xs-12\\\">\\n                    <button type=\\\"button\\\"\\n                    class=\\\"btn btn-success\\\" (click)=\\\"onAddIngredient()\\\" >Add Ingredient</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '../../../../node_modules/@angular/router';\r\nimport { FormGroup, FormControl, FormArray, Validators, FormArrayName } from '../../../../node_modules/@angular/forms';\r\nimport { RecipeService } from '../recipe.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.css']\r\n})\r\nexport class RecipeEditComponent implements OnInit {\r\n\r\n  id: number;\r\n  editMode: boolean = false;\r\n  recipeForm: FormGroup;\r\n  constructor(private route: ActivatedRoute,\r\n              private recipeService: RecipeService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (params: Params) => {\r\n        this.id = +params['id'];\r\n        this.editMode = params['id'] != null;\r\n        this.initForm();\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit(){\r\n    // const newRecipe = new Recipe(this.recipeForm.value['name'],\r\n    // this.recipeForm.value['description'],\r\n    // this.recipeForm.value['imagePath'],\r\n    // this.recipeForm.value['ingredients']);\r\n    if(this.editMode){\r\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\r\n    } else {\r\n      this.recipeService.addRecipe(this.recipeForm.value);\r\n    }\r\n    this.onCancel();\r\n  }\r\n\r\n  onAddIngredient(){\r\n\r\n    (<FormArray>this.recipeForm.get('ingredients')).push(\r\n      new FormGroup({\r\n        'name': new FormControl(null, Validators.required),\r\n        'amount': new FormControl(null, [\r\n          Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)\r\n        ])\r\n      })\r\n    )\r\n  }\r\n\r\n  onDeleteIngredient(index: number) {\r\n\r\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\r\n  }\r\n\r\n  onCancel(){\r\n\r\n    this.router.navigate(['../'], {relativeTo: this.route});\r\n  }\r\n\r\n  private initForm() {\r\n    let recipeName = '';\r\n    let recipeImagePath = '';\r\n    let recipeDescription = '';\r\n    let recipeIngredients = new FormArray([]);\r\n\r\n    if(this.editMode){\r\n      const recipe = this.recipeService.getRecipe(this.id);\r\n      recipeName = recipe.name;\r\n      recipeImagePath = recipe.imagePath;\r\n      recipeDescription = recipe.description;\r\n      if(recipe['ingredients']){\r\n        for(let ingredient of recipe.ingredients){\r\n          recipeIngredients.push(new FormGroup({\r\n            'name': new FormControl(ingredient.name, Validators.required),\r\n            'amount': new FormControl(ingredient.amount, [\r\n            Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)\r\n          ])\r\n          })\r\n        );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.recipeForm = new FormGroup({\r\n      'name': new FormControl(recipeName, Validators.required),\r\n      'imagePath': new FormControl(recipeImagePath, Validators.required),\r\n      'description': new FormControl(recipeDescription, Validators.required),\r\n      'ingredients': recipeIngredients\r\n    });\r\n  }\r\n\r\n  getControls(){\r\n\r\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<a \\n  style=\\\"cursor: pointer;\\\"\\n  [routerLink]=\\\"[index]\\\"\\n  routerLinkActive=\\\"active\\\"\\n  class=\\\"list-group-item clearfix\\\">\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">Recipe Name: {{ recipeData.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\">Description: {{ recipeData.description }}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n    <img [src]=\\\"recipeData.imagePath\\\" \\n    alt=\\\"{{ recipeData.name }}\\\" \\n    class=\\\"img-responsive\\\" style=\\\"max-height: 50px;\\\">\\n  </span>\\n\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Recipe } from '../../recipe.model';\n\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n\n  @Input() recipeData: Recipe;\n  @Input() index: number;\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button \\n    (click) = \\\"onNewRecipe()\\\"\\n    class=\\\"btn btn-success\\\">New Recipe</button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <app-recipe-item  *ngFor=\\\"let recipeEl of recipes; let i = index\\\" \\n      [recipeData] = recipeEl \\n      [index] = \\\"i\\\" ></app-recipe-item>\\n    </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Recipe } from '../recipe.model';\r\nimport { RecipeService } from '../recipe.service';\r\nimport { Router, ActivatedRoute } from '../../../../node_modules/@angular/router';\r\nimport { Subscription } from '../../../../node_modules/rxjs';\r\n\r\n@Component({\r\n  selector: 'app-recipe-list',\r\n  templateUrl: './recipe-list.component.html',\r\n  styleUrls: ['./recipe-list.component.css']\r\n})\r\nexport class RecipeListComponent implements OnInit, OnDestroy{\r\n\r\n  recipes : Recipe[];\r\n  subscription: Subscription;\r\n\r\n  constructor(private recipeService: RecipeService\r\n              ,private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.recipeService.recipesChanged.subscribe(\r\n      (recipes: Recipe[]) => {\r\n        this.recipes = recipes;\r\n      }\r\n    )\r\n    this.recipes = this.recipeService.getRecipes();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.subscription.unsubscribe;\r\n  }\r\n\r\n  onNewRecipe(){\r\n    this.router.navigate(['new'], {relativeTo: this.route});\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h3>\\n  Please select a recipe!\\n</h3>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"../../../node_modules/@angular/core\";\r\nimport { RouterModule, Routes } from \"../../../node_modules/@angular/router\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { AuthGuard } from \"../auth/auth-guard.service\";\r\n\r\nconst recipesRoutes: Routes = [\r\n  { path: '', component: RecipesComponent, children: [\r\n    { path: '', component: RecipeStartComponent },\r\n    { path: 'new', component: RecipeEditComponent, canActivate: [AuthGuard] },\r\n    { path: ':id', component: RecipeDetailComponent },\r\n    { path: ':id/edit', component: RecipeEditComponent, canActivate: [AuthGuard] }\r\n  ]}\r\n]\r\n@NgModule({\r\n    imports: [ RouterModule.forChild(recipesRoutes) ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class RecipesRoutingModule{}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-recipe-list></app-recipe-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n    <!-- <app-recipe-detail\\n    *ngIf=\\\"selectedRecipe; else infoText\\\" [recipe]=\\\"selectedRecipe\\\"></app-recipe-detail>\\n    <ng-template #infoText>\\n      <p>Please select a Recipe.</p>\\n    </ng-template>   -->\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\n\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeItemComponent } from \"./recipe-list/recipe-item/recipe-item.component\";\r\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { ReactiveFormsModule } from \"../../../node_modules/@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RecipesRoutingModule } from \"./recipes-routing.module\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        RecipesComponent,\r\n        RecipeDetailComponent,\r\n        RecipeEditComponent,\r\n        RecipeItemComponent,\r\n        RecipeListComponent,\r\n        RecipeStartComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        RecipesRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class RecipesModule{}"],"sourceRoot":""}